📂 KODTRÄD
==========
├── local_backend
│   ├── config.py
│   ├── main.py
│   ├── modules
│   │   ├── crm
│   │   │   ├── routes.py
│   │   │   ├── services.py
==========

====================
📄 Fil: config.py
📂 Kodtyp: 📄 Övrigt
🗂 Filtyp: 🐍 Python
📅 Senast ändrad: 2025-06-03 09:23:13
📏 Antal rader: 9
🧩 Antal funktioner: 0
💬 Kommentarstäckning: 0 rader (0.0%)
📥 Imports: 1 – ['import os']
🔍 Längsta funktion: 0 rader
🧠 Komplexitetspoäng: 0
🧪 TODO/FIXME: 0
====================
START: config.py
import os
from dotenv import load_dotenv
from pathlib import Path

# Ladda .env från projektroten
env_path = Path(__file__).resolve().parents[2] / ".env"
load_dotenv(dotenv_path=env_path)

DB_DSN = os.getenv("LOCAL_DB_DSN")  # alt. bygg ihop från PGHOST, etc
END: config.py

====================
📄 Fil: main.py
📂 Kodtyp: 📄 Övrigt
🗂 Filtyp: 🐍 Python
📅 Senast ändrad: 2025-06-03 09:22:37
📏 Antal rader: 8
🧩 Antal funktioner: 0
💬 Kommentarstäckning: 0 rader (0.0%)
📥 Imports: 1 – ['import os']
🔍 Längsta funktion: 0 rader
🧠 Komplexitetspoäng: 0
🧪 TODO/FIXME: 0
====================
START: main.py
from fastapi import FastAPI
import os
from dotenv import load_dotenv
load_dotenv(dotenv_path=os.path.join(os.path.dirname(__file__), "..", ".env"))
from local_backend.modules.crm.routes import router as crm_router

app = FastAPI()
app.include_router(crm_router)
END: main.py

====================
📄 Fil: modules/crm/services.py
📂 Kodtyp: 📄 Övrigt
🗂 Filtyp: 🐍 Python
📅 Senast ändrad: 2025-06-03 10:06:33
📏 Antal rader: 67
🧩 Antal funktioner: 0
💬 Kommentarstäckning: 0 rader (0.0%)
📥 Imports: 3 – ['import os', 'import asyncpg', 'import json']
🔍 Längsta funktion: 0 rader
🧠 Komplexitetspoäng: 5
🧪 TODO/FIXME: 0
====================
START: services.py
import os
import asyncpg
from typing import List

import json

def fix_encoding(text):
    if isinstance(text, str):
        try:
            return text.encode("latin1").decode("utf-8")
        except Exception:
            return text
    return text

async def get_all_contacts():
    db_url = os.environ["LOCAL_DB_URL"]
    conn = await asyncpg.connect(dsn=db_url)
    rows = await conn.fetch("""
        SELECT 
            c.id,
            c.email,
            c.booking_email,
            c.metadata,
            COALESCE(b.count, 0) AS booking_count
        FROM contact c
        LEFT JOIN (
            SELECT contact_id, COUNT(*) AS count
            FROM bookings
            GROUP BY contact_id
        ) b ON c.id = b.contact_id
        ORDER BY c.created_at DESC
        LIMIT 100
    """)
    await conn.close()
    contacts = []
    for row in rows:
        metadata_raw = row["metadata"]
        if isinstance(metadata_raw, dict):
            metadata = metadata_raw
        elif isinstance(metadata_raw, str):
            try:
                metadata = json.loads(metadata_raw)
            except Exception:
                metadata = {}
        else:
            metadata = {}
        print("RAW last_name:", metadata.get("last_name"))
        contacts.append({
            "id": str(row["id"]),
            "email": row["email"],
            "booking_email": row["booking_email"],
            "first_name": fix_encoding(metadata.get("first_name")),
            "last_name": fix_encoding(metadata.get("last_name")),
            "company": fix_encoding(metadata.get("company")),
            "phone": metadata.get("phone"),
            "booking_count": row["booking_count"]
        })
    return contacts

async def get_contact_by_id(contact_id: str):
    db_url = os.environ["LOCAL_DB_URL"]
    conn = await asyncpg.connect(dsn=db_url)
    row = await conn.fetchrow("SELECT * FROM contact WHERE id = $1", contact_id)
    await conn.close()
    if row:
        return dict(row)
    return {"error": "Contact not found"}
END: services.py

====================
📄 Fil: modules/crm/routes.py
📂 Kodtyp: 📄 Övrigt
🗂 Filtyp: 🐍 Python
📅 Senast ändrad: 2025-06-03 08:06:43
📏 Antal rader: 14
🧩 Antal funktioner: 0
💬 Kommentarstäckning: 0 rader (0.0%)
📥 Imports: 0 – Inga
🔍 Längsta funktion: 0 rader
🧠 Komplexitetspoäng: 0
🧪 TODO/FIXME: 0
====================
START: routes.py
from fastapi import APIRouter
from fastapi.responses import JSONResponse
from .services import get_all_contacts, get_contact_by_id

router = APIRouter(prefix="/contacts", tags=["contacts"])

@router.get("/")
async def list_contacts():
    data = await get_all_contacts()
    return JSONResponse(content=data, media_type="application/json; charset=utf-8")

@router.get("/{contact_id}")
async def get_contact(contact_id: str):
    return await get_contact_by_id(contact_id)
END: routes.py

📁 KONFIGURATIONSFILER (function.json / host.json / package.json / .funcignore)
====================================

Inga function.json, host.json, package.json eller .funcignore hittades i projektet.

📈 SUMMERING AV ALLA JS-FILER
====================================
📏 Totalt antal rader kod: 98
🧩 Totalt antal funktioner: 0
🧠 Total komplexitetspoäng: 5
🧪 Antal TODO/FIXME totalt: 0

📊 Per fil:
fil,rader,funktioner,komplexitet,kommentarer,imports
config.py,9,0,0,0,1
main.py,8,0,0,0,1
services.py,67,0,5,0,3
routes.py,14,0,0,0,0
📊 LOKAL DATABAS – STRUKTUR & INNEHÅLL
====================================

📁 Tabell: bookings
  • start_time (timestamp with time zone)
  • end_time (timestamp with time zone)
  • id (uuid)
  • updated_at (timestamp with time zone)
  • metadata (jsonb)
  • created_at (timestamp with time zone)
  • contact_id (uuid)
  • meeting_type (text)
  • booking_email (text)
  📐 Kolumntyper:
    - start_time: timestamp with time zone
    - end_time: timestamp with time zone
    - id: uuid
    - updated_at: timestamp with time zone
    - metadata: jsonb
    - created_at: timestamp with time zone
    - contact_id: uuid
    - meeting_type: text
    - booking_email: text
  🔑 [p] bookings_pkey: PRIMARY KEY (id)
  🔑 [f] fk_bookings_contact: FOREIGN KEY (contact_id) REFERENCES contact(id) ON DELETE SET NULL
  🔗 Relationer:
    - contact_id ➡ contact.id
  ⚙️ Triggers:
    - log_bookings_change_trigger (INSERT): EXECUTE FUNCTION log_bookings_change()
    - log_bookings_change_trigger (DELETE): EXECUTE FUNCTION log_bookings_change()
    - log_bookings_change_trigger (UPDATE): EXECUTE FUNCTION log_bookings_change()
    - audit_sync_bookings_trigger (INSERT): EXECUTE FUNCTION log_bookings_change()
    - audit_sync_bookings_trigger (DELETE): EXECUTE FUNCTION log_bookings_change()
    - audit_sync_bookings_trigger (UPDATE): EXECUTE FUNCTION log_bookings_change()
  🧪 Exempelrader:
    - start_time=2025-06-03 08:00:00+02:00, end_time=2025-06-03 08:10:00+02:00, meeting_type=facetime, metadata={'phone': '070956145345', 'origin': 'klrab.se', 'company': 'Test AB', 'subject': 'FaceTime-möte: Daniel | Test AB & Daniel | Kinnekulle Ledningsrådgivning AB', 'location': 'FaceTime', 'last_name': 'Källberg', 'first_name': 'Daniel', 'ip_address': '172.226.49.36:49063', 'user_agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15', 'online_link': 'facetime:070956145345', 'body_preview': '<html>\r\n<head>\r\n<meta http-equiv="Content-Type" content="text/html; charset=utf-8">\r\n</head>\r\n<body>\r\nDetta är en inbjudan till möte: FaceTime-möte: Daniel | Test AB &amp; Daniel | Kinnekulle Ledningsrådgivning AB\r\n</body>\r\n</html>\r\n', 'meeting_length': 10, 'calendar_response_status': 'none'}, created_at=2025-06-02 22:50:37.228000+02:00, contact_id=1138f1b8-d247-4bb8-b9a1-57340b6da8ff, id=66143b52-dc79-448c-a6a9-ad4c6f6d7914, updated_at=2025-06-02 22:50:37.228000+02:00, booking_email=daniel.kallberg@mac.com

📁 Tabell: contact
  • metadata (jsonb)
  • created_at (timestamp with time zone)
  • id (uuid)
  • updated_at (timestamp with time zone)
  • booking_email (text)
  • email (text)
  📐 Kolumntyper:
    - metadata: jsonb
    - created_at: timestamp with time zone
    - id: uuid
    - updated_at: timestamp with time zone
    - booking_email: text
    - email: text
  🔑 [p] contact_pkey: PRIMARY KEY (id)
  🔗 Relationer:
  ⚙️ Triggers:
    - log_contact_change_trigger (INSERT): EXECUTE FUNCTION log_contact_change()
    - log_contact_change_trigger (DELETE): EXECUTE FUNCTION log_contact_change()
    - log_contact_change_trigger (UPDATE): EXECUTE FUNCTION log_contact_change()
    - audit_sync_contact_trigger (INSERT): EXECUTE FUNCTION log_contact_change()
    - audit_sync_contact_trigger (DELETE): EXECUTE FUNCTION log_contact_change()
    - audit_sync_contact_trigger (UPDATE): EXECUTE FUNCTION log_contact_change()
  🧪 Exempelrader:
    - metadata={'phone': '070956145345', 'origin': 'klrab.se', 'company': 'Test AB', 'last_name': 'Källberg', 'first_name': 'Daniel'}, created_at=2025-06-02 22:50:24.084981+02:00, id=1138f1b8-d247-4bb8-b9a1-57340b6da8ff, booking_email=daniel.kallberg@mac.com, updated_at=2025-06-02 22:50:24.084981+02:00, email=daniel.kallberg@mac.com

📁 Tabell: booking_settings
  • value (jsonb)
  • updated_at (timestamp with time zone)
  • key (text)
  • value_type (text)
  📐 Kolumntyper:
    - value: jsonb
    - updated_at: timestamp with time zone
    - key: text
    - value_type: text
  🔑 [p] booking_settings_pkey: PRIMARY KEY (key)
  🔗 Relationer:
  ⚙️ Triggers:
  🧪 Exempelrader:
    - key=email_subject_templates, value={'zoom': 'Zoommöte: {{first_name}} | {{company}} & Daniel | Kinnekulle Ledningsrådgivning AB', 'teams': 'Teamsmöte: {{first_name}} | {{company}} & Daniel | Kinnekulle Ledningsrådgivning AB', 'atclient': 'Möte hos {{company}}: {{first_name}} | {{company}} & Daniel | Kinnekulle Ledningsrådgivning AB', 'atoffice': 'Möte hos KLR AB (Stockholm | Södermalm): {{first_name}} | {{company}} & Daniel | Kinnekulle Ledningsrådgivning AB', 'facetime': 'FaceTime-möte: {{first_name}} | {{company}} & Daniel | Kinnekulle Ledningsrådgivning AB'}, value_type=json, updated_at=2025-05-30 22:46:14.058171+02:00
    - key=default_language, value=sv, value_type=string, updated_at=2025-05-25 12:37:53.619684+02:00
    - key=default_meeting_length_atclient, value=[90, 180, 270, 360], value_type=array, updated_at=2025-04-23 14:48:49.778155+02:00
    - key=default_meeting_length_atoffice, value=[60, 90], value_type=array, updated_at=2025-04-23 14:48:49.778155+02:00
    - key=default_meeting_length_digital, value=[10, 20, 60], value_type=array, updated_at=2025-04-23 14:48:49.778155+02:00

📁 Tabell: company
  • metadata (jsonb)
  • created_at (timestamp with time zone)
  • id (uuid)
  • name (text)
  • org_number (text)
  📐 Kolumntyper:
    - metadata: jsonb
    - created_at: timestamp with time zone
    - id: uuid
    - name: text
    - org_number: text
  🔑 [p] company_pkey: PRIMARY KEY (id)
  🔗 Relationer:
  ⚙️ Triggers:

📁 Tabell: translation
  • key (character varying)
  • sv (text)
  • en (text)
  📐 Kolumntyper:
    - key: character varying
    - sv: text
    - en: text
  🔑 [u] unique_translation_key: UNIQUE (key)
  🔑 [p] translation_pkey: PRIMARY KEY (key)
  🔗 Relationer:
  ⚙️ Triggers:
  🧪 Exempelrader:
    - key=error_min_duration_fysiskt_kund, sv=Mötestiden för 'Fysiskt hos kund' måste vara minst {{minutes}} minuter. Du visste det redan., en=The meeting time for 'On-site at customer' must be at least {{minutes}} minutes. You knew that.
    - key=error_min_duration_fysiskt_mig, sv=Mötestiden för 'Fysiskt hos mig' måste vara minst {{minutes}} minuter. Annars hinner vi bara säga hej., en=The meeting time for 'At my office' must be at least {{minutes}} minutes. Otherwise, we’ll only have time to say hello.
    - key=email_body_booking_received, sv=Hej {{name}}! Vi har tagit emot din bokning för {{meeting_type}} mellan {{start_time}} och {{end_time}}. Ingen panik – vi återkommer med bekräftelse. / Daniel, en=Hello {{name}}, We’ve received your booking for {{meeting_type}} between {{start_time}} and {{end_time}}. No need to panic – we’ll confirm shortly. / Daniel
    - key=email_body_booking_confirmed, sv=Hej {{name}}! Din bokning för {{meeting_type}} mellan {{start_time}} och {{end_time}} är nu spikad. Ser fram emot det! / Daniel, en=Hello {{name}}, Your booking for {{meeting_type}} between {{start_time}} and {{end_time}} is now locked in. Looking forward! / Daniel
    - key=email_body_booking_cancelled, sv=Hej {{name}}! Din bokning för {{meeting_type}} mellan {{start_time}} och {{end_time}} är avbokad. Hör av dig om du vill hitta en ny tid. / Daniel, en=Hello {{name}}, Your booking for {{meeting_type}} between {{start_time}} and {{end_time}} has been cancelled. Let me know if you'd like a new one. / Daniel

📁 Tabell: ccrelation
  • id (uuid)
  • company_id (uuid)
  • contact_id (uuid)
  • main_contact (boolean)
  • start_date (date)
  • end_date (date)
  • metadata (jsonb)
  • created_at (timestamp with time zone)
  • role (text)
  📐 Kolumntyper:
    - id: uuid
    - company_id: uuid
    - contact_id: uuid
    - main_contact: boolean
    - start_date: date
    - end_date: date
    - metadata: jsonb
    - created_at: timestamp with time zone
    - role: text
  🔑 [p] ccrelation_pkey: PRIMARY KEY (id)
  🔑 [f] fk_ccrelation_contact_id: FOREIGN KEY (contact_id) REFERENCES contact(id) ON DELETE CASCADE
  🔑 [f] fk_ccrelation_company_id: FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE
  🔗 Relationer:
    - contact_id ➡ contact.id
    - company_id ➡ company.id
  ⚙️ Triggers:

📁 Tabell: pending_changes
  • booking_id (uuid)
  • processed (boolean)
  • created_at (timestamp with time zone)
  • payload (jsonb)
  • id (uuid)
  • record_id (uuid)
  • table_name (text)
  • operation (text)
  • change_type (text)
  • direction (text)
  📐 Kolumntyper:
    - booking_id: uuid
    - processed: boolean
    - created_at: timestamp with time zone
    - payload: jsonb
    - id: uuid
    - record_id: uuid
    - table_name: text
    - operation: text
    - change_type: text
    - direction: text
  🔑 [p] pending_changes_pkey: PRIMARY KEY (id)
  🔑 [f] fk_pending_changes_booking_id: FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE CASCADE
  🔗 Relationer:
    - booking_id ➡ bookings.id
  ⚙️ Triggers:
  🧪 Exempelrader:
    - id=76c81527-5339-4454-95e1-20f930561ed4, table_name=contact, record_id=1138f1b8-d247-4bb8-b9a1-57340b6da8ff, change_type=INSERT, direction=out, processed=False, created_at=2025-06-02 22:51:38.761446+02:00, operation=INSERT, payload={'id': '1138f1b8-d247-4bb8-b9a1-57340b6da8ff', 'email': 'daniel.kallberg@mac.com', 'metadata': {'phone': '070956145345', 'origin': 'klrab.se', 'company': 'Test AB', 'last_name': 'Källberg', 'first_name': 'Daniel'}, 'created_at': '2025-06-02T22:50:24.084981+02:00', 'updated_at': '2025-06-02T22:50:24.084981+02:00', 'booking_email': 'daniel.kallberg@mac.com'}, booking_id=None
    - id=49aac044-f005-44f6-ba9e-7a19906c8eb0, table_name=contact, record_id=1138f1b8-d247-4bb8-b9a1-57340b6da8ff, change_type=INSERT, direction=out, processed=False, created_at=2025-06-02 22:51:38.761446+02:00, operation=INSERT, payload={'id': '1138f1b8-d247-4bb8-b9a1-57340b6da8ff', 'email': 'daniel.kallberg@mac.com', 'metadata': {'phone': '070956145345', 'origin': 'klrab.se', 'company': 'Test AB', 'last_name': 'Källberg', 'first_name': 'Daniel'}, 'created_at': '2025-06-02T22:50:24.084981+02:00', 'updated_at': '2025-06-02T22:50:24.084981+02:00', 'booking_email': 'daniel.kallberg@mac.com'}, booking_id=None
    - id=eccf7a63-105c-4f7f-9cd1-d9bfba9fa3c8, table_name=bookings, record_id=66143b52-dc79-448c-a6a9-ad4c6f6d7914, change_type=INSERT, direction=out, processed=False, created_at=2025-06-02 22:51:38.834777+02:00, operation=INSERT, payload={'id': '66143b52-dc79-448c-a6a9-ad4c6f6d7914', 'end_time': '2025-06-03T08:10:00+02:00', 'metadata': {'phone': '070956145345', 'origin': 'klrab.se', 'company': 'Test AB', 'subject': 'FaceTime-möte: Daniel | Test AB & Daniel | Kinnekulle Ledningsrådgivning AB', 'location': 'FaceTime', 'last_name': 'Källberg', 'first_name': 'Daniel', 'ip_address': '172.226.49.36:49063', 'user_agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15', 'online_link': 'facetime:070956145345', 'body_preview': '<html>\r\n<head>\r\n<meta http-equiv="Content-Type" content="text/html; charset=utf-8">\r\n</head>\r\n<body>\r\nDetta är en inbjudan till möte: FaceTime-möte: Daniel | Test AB &amp; Daniel | Kinnekulle Ledningsrådgivning AB\r\n</body>\r\n</html>\r\n', 'meeting_length': 10, 'calendar_response_status': 'none'}, 'contact_id': '1138f1b8-d247-4bb8-b9a1-57340b6da8ff', 'created_at': '2025-06-02T22:50:37.228+02:00', 'start_time': '2025-06-03T08:00:00+02:00', 'updated_at': '2025-06-02T22:50:37.228+02:00', 'meeting_type': 'facetime', 'booking_email': 'daniel.kallberg@mac.com'}, booking_id=66143b52-dc79-448c-a6a9-ad4c6f6d7914
    - id=50aae37f-6a4b-4cd3-83b8-bf18a865227b, table_name=bookings, record_id=66143b52-dc79-448c-a6a9-ad4c6f6d7914, change_type=INSERT, direction=out, processed=False, created_at=2025-06-02 22:51:38.834777+02:00, operation=INSERT, payload={'id': '66143b52-dc79-448c-a6a9-ad4c6f6d7914', 'end_time': '2025-06-03T08:10:00+02:00', 'metadata': {'phone': '070956145345', 'origin': 'klrab.se', 'company': 'Test AB', 'subject': 'FaceTime-möte: Daniel | Test AB & Daniel | Kinnekulle Ledningsrådgivning AB', 'location': 'FaceTime', 'last_name': 'Källberg', 'first_name': 'Daniel', 'ip_address': '172.226.49.36:49063', 'user_agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Safari/605.1.15', 'online_link': 'facetime:070956145345', 'body_preview': '<html>\r\n<head>\r\n<meta http-equiv="Content-Type" content="text/html; charset=utf-8">\r\n</head>\r\n<body>\r\nDetta är en inbjudan till möte: FaceTime-möte: Daniel | Test AB &amp; Daniel | Kinnekulle Ledningsrådgivning AB\r\n</body>\r\n</html>\r\n', 'meeting_length': 10, 'calendar_response_status': 'none'}, 'contact_id': '1138f1b8-d247-4bb8-b9a1-57340b6da8ff', 'created_at': '2025-06-02T22:50:37.228+02:00', 'start_time': '2025-06-03T08:00:00+02:00', 'updated_at': '2025-06-02T22:50:37.228+02:00', 'meeting_type': 'facetime', 'booking_email': 'daniel.kallberg@mac.com'}, booking_id=66143b52-dc79-448c-a6a9-ad4c6f6d7914

📁 Tabell: event_log
  • record_id (uuid)
  • received_at (timestamp with time zone)
  • timestamp (timestamp with time zone)
  • booking_id (uuid)
  • id (uuid)
  • payload (jsonb)
  • table_name (text)
  • event_type (text)
  • source (text)
  • action (text)
  📐 Kolumntyper:
    - record_id: uuid
    - received_at: timestamp with time zone
    - timestamp: timestamp with time zone
    - booking_id: uuid
    - id: uuid
    - payload: jsonb
    - table_name: text
    - event_type: text
    - source: text
    - action: text
  🔑 [p] event_log_pkey: PRIMARY KEY (id)
  🔗 Relationer:
  ⚙️ Triggers:
  🧪 Exempelrader:
    - source=None, event_type=None, payload=None, received_at=2025-06-02 22:51:38.761446+02:00, id=bf18a343-98f4-41ba-8aef-d004d928082c, table_name=contact, record_id=1138f1b8-d247-4bb8-b9a1-57340b6da8ff, action=INSERT, timestamp=2025-06-02 22:51:38.761446+02:00, booking_id=None
    - source=None, event_type=None, payload=None, received_at=2025-06-02 22:51:38.761446+02:00, id=aff22700-0c2f-468b-b668-fffce6e976ee, table_name=contact, record_id=1138f1b8-d247-4bb8-b9a1-57340b6da8ff, action=INSERT, timestamp=2025-06-02 22:51:38.761446+02:00, booking_id=None
    - source=sync, event_type=insert_contact, payload={'id': '1138f1b8-d247-4bb8-b9a1-57340b6da8ff', 'email': 'daniel.kallberg@mac.com', 'metadata': {'phone': '070956145345', 'origin': 'klrab.se', 'company': 'Test AB', 'last_name': 'Källberg', 'first_name': 'Daniel'}, 'created_at': '2025-06-02T20:50:24.084981+00:00', 'updated_at': '2025-06-02T20:50:24.084981+00:00', 'booking_email': 'daniel.kallberg@mac.com'}, received_at=2025-06-02 22:51:38.761446+02:00, id=1bfe1832-7861-4b8a-9efd-9577db9c9591, table_name=None, record_id=None, action=None, timestamp=2025-06-02 22:51:38.761446+02:00, booking_id=None
    - source=None, event_type=None, payload=None, received_at=2025-06-02 22:51:38.834777+02:00, id=1192420b-3826-4726-875b-c24ae9233de2, table_name=bookings, record_id=66143b52-dc79-448c-a6a9-ad4c6f6d7914, action=INSERT, timestamp=2025-06-02 22:51:38.834777+02:00, booking_id=None
    - source=None, event_type=None, payload=None, received_at=2025-06-02 22:51:38.834777+02:00, id=9f4d9915-396a-4554-b80a-50426c071779, table_name=bookings, record_id=66143b52-dc79-448c-a6a9-ad4c6f6d7914, action=INSERT, timestamp=2025-06-02 22:51:38.834777+02:00, booking_id=None

